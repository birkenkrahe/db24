#+TITLE: Bonus Exercise
#+AUTHOR: Pedro Mota - Pledged
#+SUBTITLE: prove De Morgan laws in SQL
#+STARTUP: hideblocks overview indent :
#+OPTIONS: toc:nil num:nil ^:nil:
#+PROPERTY: header-args:sqlite :results output

#+begin_src sqlite :db test.sqlite
  .database
#+end_src

#+RESULTS:
: main: c:\Users\pedro\DSC\data_bases\test.sqlite r/w

These steps are not in the order in which ~SQL~ execute the commands:
1. ~SELECT~ P and Q select the columns with the values of P and Q.
2. Following that we have the columns containg the logical
   combinations between the values of ~P~ and ~Q~.
3. The first two statements refer to ¬(P∨Q)≡(¬P)∧(¬Q)
   The last two statements refer to ¬(P∧Q)≡(¬P)∨(¬Q)
4. Then we create two temporary tables *T1* and *T2* containg the values
   of ~P~ and ~Q~. By using ~UNION ALL~ we create two rows and single
   column for *P* and *Q*.
5. By using the ~CROSS JOIN~ operation we combine the rows between *T1*
   and *T2* resulting in the following output:
   _______
   P | Q
   --|--
   0 | 0
   0 | 1
   1 | 0
   1 | 1

6. Finally, the logical operation are calculated using the results
   from the rows in the ~CROSS JOINED~ table.

#+begin_src sqlite :db test.sqlite :header :column :result output
  SELECT
      P,
      Q,
      NOT (P OR Q) AS "NOT (P OR Q)",
      (NOT P) AND (NOT Q) AS "(NOT P) AND (NOT Q)",
      NOT (P AND Q) AS "NOT (P AND Q)",
      (NOT P) OR (NOT Q) AS "(NOT P) OR (NOT Q)"
  FROM
      (
          SELECT 0 AS P UNION ALL
          SELECT 1 AS P
      ) AS T1
  CROSS JOIN
      (
          SELECT 0 AS Q UNION ALL
          SELECT 1 AS Q
      ) AS T2;
#+end_src

#+RESULTS:
: P  Q  NOT (P OR Q)  (NOT P) AND (NOT Q)  NOT (P AND Q)  (NOT P) OR (NOT Q)
: -  -  ------------  -------------------  -------------  ------------------
: 0  0  1             1                    1              1                 
: 0  1  0             0                    1              1                 
: 1  0  0             0                    1              1                 
: 1  1  0             0                    0              0
